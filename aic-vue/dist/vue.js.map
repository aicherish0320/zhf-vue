{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["export function isFunction(data) {\n  return typeof data === 'function'\n}\n\nexport function isObject(val) {\n  return typeof val === 'object' && val !== null\n}\n","import { isObject } from '../utils'\n\nclass Observer {\n  constructor(value) {\n    this.walk(value)\n  }\n\n  walk(data) {\n    Object.keys(data).forEach((key) => {\n      defineReactive(data, key, data[key])\n    })\n  }\n}\n/*\n  性能优化的原则\n    1. 不要把所有的数据都放在 data 中\n    2. 不要写数据的时候，层次过深；尽量扁平化数据\n    3. 不要频繁获取数据\n    4. 数据不需要响应式，可以使用 Object.freeze 冻结属性\n*/\nfunction defineReactive(obj, key, value) {\n  observe(value)\n  Object.defineProperty(obj, key, {\n    get() {\n      return value\n    },\n    set(newVal) {\n      if (value !== newVal) {\n        value = newVal\n      }\n    }\n  })\n}\n\nexport function observe(value) {\n  if (!isObject(value)) {\n    return\n  }\n\n  return new Observer(value)\n}\n","import { observe } from './observe'\nimport { isFunction } from './utils'\n\nfunction initState(vm) {\n  const opts = vm.$options\n  if (opts.data) {\n    initData(vm)\n  }\n}\n\nfunction initData(vm) {\n  let data = vm.$options.data\n  data = isFunction(data) ? data.call(vm) : data\n\n  observe(data)\n\n  console.log(data)\n}\n\nexport default initState\n","import initState from './state'\n\nfunction initMixin(Vue) {\n  Vue.prototype._init = function (options) {\n    const vm = this\n\n    vm.$options = options\n\n    initState(vm)\n\n    if (vm.$options.el) {\n    }\n  }\n}\n\nexport default initMixin\n","import initMixin from './init'\n\n/*\n  Vue 通过原型的模式来实现扩展的\n*/\nfunction Vue(options) {\n  this._init(options)\n}\n\ninitMixin(Vue)\n\nexport default Vue\n"],"names":["isFunction","data","isObject","val","Observer","constructor","value","walk","Object","keys","forEach","key","defineReactive","obj","observe","defineProperty","get","set","newVal","initState","vm","opts","$options","initData","call","console","log","initMixin","Vue","prototype","_init","options","el"],"mappings":";;;;;;EAAO,SAASA,UAAT,CAAoBC,IAApB,EAA0B;EAC/B,SAAO,OAAOA,IAAP,KAAgB,UAAvB;EACD;EAEM,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;EAC5B,SAAO,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,IAA1C;EACD;;ECJD,MAAMC,QAAN,CAAe;EACbC,EAAAA,WAAW,CAACC,KAAD,EAAQ;EACjB,SAAKC,IAAL,CAAUD,KAAV;EACD;;EAEDC,EAAAA,IAAI,CAACN,IAAD,EAAO;EACTO,IAAAA,MAAM,CAACC,IAAP,CAAYR,IAAZ,EAAkBS,OAAlB,CAA2BC,GAAD,IAAS;EACjCC,MAAAA,cAAc,CAACX,IAAD,EAAOU,GAAP,EAAYV,IAAI,CAACU,GAAD,CAAhB,CAAd;EACD,KAFD;EAGD;;EATY;EAWf;EACA;EACA;EACA;EACA;EACA;EACA;;;EACA,SAASC,cAAT,CAAwBC,GAAxB,EAA6BF,GAA7B,EAAkCL,KAAlC,EAAyC;EACvCQ,EAAAA,OAAO,CAACR,KAAD,CAAP;EACAE,EAAAA,MAAM,CAACO,cAAP,CAAsBF,GAAtB,EAA2BF,GAA3B,EAAgC;EAC9BK,IAAAA,GAAG,GAAG;EACJ,aAAOV,KAAP;EACD,KAH6B;;EAI9BW,IAAAA,GAAG,CAACC,MAAD,EAAS;EACV,UAAIZ,KAAK,KAAKY,MAAd,EAAsB;EACpBZ,QAAAA,KAAK,GAAGY,MAAR;EACD;EACF;;EAR6B,GAAhC;EAUD;;EAEM,SAASJ,OAAT,CAAiBR,KAAjB,EAAwB;EAC7B,MAAI,CAACJ,QAAQ,CAACI,KAAD,CAAb,EAAsB;EACpB;EACD;;EAED,SAAO,IAAIF,QAAJ,CAAaE,KAAb,CAAP;EACD;;ECrCD,SAASa,SAAT,CAAmBC,EAAnB,EAAuB;EACrB,QAAMC,IAAI,GAAGD,EAAE,CAACE,QAAhB;;EACA,MAAID,IAAI,CAACpB,IAAT,EAAe;EACbsB,IAAAA,QAAQ,CAACH,EAAD,CAAR;EACD;EACF;;EAED,SAASG,QAAT,CAAkBH,EAAlB,EAAsB;EACpB,MAAInB,IAAI,GAAGmB,EAAE,CAACE,QAAH,CAAYrB,IAAvB;EACAA,EAAAA,IAAI,GAAGD,UAAU,CAACC,IAAD,CAAV,GAAmBA,IAAI,CAACuB,IAAL,CAAUJ,EAAV,CAAnB,GAAmCnB,IAA1C;EAEAa,EAAAA,OAAO,CAACb,IAAD,CAAP;EAEAwB,EAAAA,OAAO,CAACC,GAAR,CAAYzB,IAAZ;EACD;;ECfD,SAAS0B,SAAT,CAAmBC,GAAnB,EAAwB;EACtBA,EAAAA,GAAG,CAACC,SAAJ,CAAcC,KAAd,GAAsB,UAAUC,OAAV,EAAmB;EACvC,UAAMX,EAAE,GAAG,IAAX;EAEAA,IAAAA,EAAE,CAACE,QAAH,GAAcS,OAAd;EAEAZ,IAAAA,SAAS,CAACC,EAAD,CAAT;;EAEA,QAAIA,EAAE,CAACE,QAAH,CAAYU,EAAhB,EAAoB;EAErB,GATD;EAUD;;ECXD;EACA;EACA;;EACA,SAASJ,GAAT,CAAaG,OAAb,EAAsB;EACpB,OAAKD,KAAL,CAAWC,OAAX;EACD;;EAEDJ,SAAS,CAACC,GAAD,CAAT;;;;;;;;"}